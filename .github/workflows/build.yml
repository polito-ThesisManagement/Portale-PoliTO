name: Build and Test with SonarQube

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    env:
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: polito
      DB_NAME_TEST: polito_test
      DB_HOST: 127.0.0.1
      DB_PORT: 3306

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Install back-end dependencies
        run: npm install
        working-directory: back-end

      - name: Start MySQL (or use a service like Docker for better isolation)
        run: |
          sudo /etc/init.d/mysql start || sudo service mysql start

      - name: Execute schema_test.sql and data_test.sql
        run: |
          set -e  # Stop the script if any command fails
          mysql -h ${{ env.DB_HOST }} -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} --default-character-set=utf8mb4 < ./database/test/schema_test.sql
          mysql -h ${{ env.DB_HOST }} -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} --default-character-set=utf8mb4 < ./database/test/data_test.sql

      - name: Run back-end tests
        run: npm test
        working-directory: back-end
        continue-on-error: false

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          start: npm run start-instrumented
          working-directory: ./front-end
          wait-on: 'http://localhost:3000'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Official SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
